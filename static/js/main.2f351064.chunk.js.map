{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialog.module.css","components/Header/Header.module.css","components/Profile/Avatarinfo/Ava.module.css","components/Users/Users.module.css","components/Profile/MyPost/MyPost.module.css","components/Users/Paginator.module.css","components/Common/Preloader.module.css","components/Profile/MyPost/Post/Post.module.css","reportWebVitals.js","assets/loader.svg","components/Common/Preloader.jsx","HOC/withAuthRedirect.js","redux/dialog_reducer.js","components/Dialogs/DialogItem.jsx","components/Dialogs/Message.jsx","components/Dialogs/DialogContainer.jsx","components/Dialogs/Dialog.jsx","assets/headIcon.png","components/Header/Header.jsx","api/api.js","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Navbar/Navbar.jsx","components/Profile/ProfileDataForm.jsx","components/Profile/ProfileStatusWithHooks.jsx","components/Common/Button.jsx","components/Profile/ProfileDataBlock.jsx","assets/user_avatar.png","components/Profile/Avatarinfo/AvatarInfo.jsx","redux/profile_reducer.js","components/Profile/MyPost/Post/Post.jsx","components/Profile/MyPost/MyPost.jsx","components/Profile/MyPost/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Setting/Setting.jsx","redux/users_reducer.js","components/Users/Paginator.jsx","components/Users/Users.jsx","redux/Users-selectors.js","components/Users/Users_container.jsx","redux/app-reducer.js","App.js","redux/redux-store.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Preloader","className","sett","im","src","loader","mapStateToPropsForRedirect","state","isAuth","auth","CREATE_NEW_MESSAGE_TEXT","MESSAGE_ADD","initialState","dialogsData","id","name","messagesData","createNewMessagetext","dialogsReducer","action","type","stateCopy","newText","message","push","DialogItem","props","path","s","dialog","to","Message","authRedirect","Component","RedirectComponent","this","React","connect","withAuthRedirect","dialogsElements","map","messagesElements","m","dialogs","dialogsItems","messages","onChange","event","text","target","value","MessageText","placeholder","onClick","addMessage","DialogContainer","dialogPage","dispatch","Header","headIcon","headTitle","loginBlock","login","logout","instance","axios","withCredentials","baseURL","headers","authAPI","get","response","data","email","password","rememberMe","post","delete","usersAPI","currentPage","pageSize","profileAPI","userId","status","put","photoFile","formData","FormData","append","profileObject","SET_USER_DATA","authReducer","setAuthUserData","Id","resultCode","HeaderContainer","initialValues","onSubmit","values","setSubmitting","isSubmitting","component","disabled","Navbar","item","activeClassName","activeLink","ProfileDataForm","lookingForAJob","lookingForAJobDescription","fullName","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","offEditMode","saveProfile","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","e","currentTarget","Button","ProfileDataBlock","displayContact","showContact","profile","Object","keys","key","contactTitle","contactValue","isOwner","goToEditMode","Contact","AvatarInfo","description","avatar","photos","large","userPhoto","files","length","savePhoto","information","link","objectinformation","objectInformation","ADD_POST","CREATE_NEW_POST_TEXT","SET_USERS_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCES","posts","likesCount","newPostText","profileReducer","newPost","updateNewPostTextActionCreator","Post","MyPost","postsElements","p","newPostElement","createRef","content","current","updateNewPostText","ref","addPost","MyPostContainer","profilePage","Profile","ProfileContainer","match","params","UserId","getUsersProfile","getStatus","refreshProfile","prevProps","prevState","ContainerRouteProfile","withRouter","file","a","Setting","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","IS_FETCHING","TOGGLE_FOLLOW_PROGRESS","users","totalCount","isFetching","followingInProgress","usersReducer","u","userID","followed","filter","setTotalCount","setIsFetching","toggleFollowingInProgress","Paginator","pageCount","Math","ceil","pages","i","PortionNumber","setPortionNumber","PortionCount","leftBorderPortion","RightBorderportion","activePage","onPageChanged","Users","h2","small","user_avatar","some","unfollow","follow","getUsersSuper","createSelector","usersPage","getPageSize","getCurrentPage","getTotalCount","getStatusIsFetching","getStatusFollInProgress","UsersAPIComponent","pageNumber","getUsers","setCurrentPage","UsersContainer","user","items","SET_INITIALIZED","initialized","appReducer","App","initialApp","render","Login","app","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f351064.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Navbar_item__17chj\",\"activeLink\":\"Navbar_activeLink__1nxUt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialog_dialogs__EBIsh\",\"dialogsItems\":\"Dialog_dialogsItems__x4Lpg\",\"dialog\":\"Dialog_dialog__1MTR0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2PaMV\",\"headIcon\":\"Header_headIcon__2TXwj\",\"headTitle\":\"Header_headTitle__1yrNn\",\"loginBlock\":\"Header_loginBlock__2UB2y\",\"login\":\"Header_login__2nrcF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Ava_avatar__31kYH\",\"item\":\"Ava_item__x0iiX\",\"description\":\"Ava_description__3C6nW\",\"information\":\"Ava_information__2-awO\",\"link\":\"Ava_link__2AlX1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Users_avatar__3g3hZ\",\"h2\":\"Users_h2__15xrv\",\"item\":\"Users_item__G4eu0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPost_item__qJigH\",\"content\":\"MyPost_content__3P65b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activePage\":\"Paginator_activePage__Ym109\",\"Paginator\":\"Paginator_Paginator__3dTy4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"im\":\"Preloader_im__39qwu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__IBu2k\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/loader.f6190433.svg\";","import React from 'react';\r\nimport loader from '../../assets/loader.svg';\r\nimport sett from './Preloader.module.css'\r\n\r\n\r\nconst Preloader = () => {\r\n    return <div className={sett.im}><img src={loader}/></div>\r\n    }\r\n\r\n    export default Preloader;","import { Redirect } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    \r\n        isAuth: state.auth.isAuth\r\n    \r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n \r\n\r\n\r\nlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\nreturn ConnectedAuthRedirectComponent; \r\n}","let CREATE_NEW_MESSAGE_TEXT = 'CREATE-NEW-MESSAGE-TEXT';\r\nlet MESSAGE_ADD = 'MESSAGE-ADD';\r\n\r\n\r\nlet initialState = {\r\n  dialogsData: [\r\n      { id: 1, name: 'Andrew' },\r\n      { id: 2, name: 'Sveta' },\r\n      { id: 3, name: 'Julia' },\r\n      { id: 4, name: 'Pasha' },\r\n      { id: 5, name: 'Polina' },\r\n      { id: 6, name: 'Seva' },\r\n  ],\r\n  messagesData: [\r\n      \r\n  ],\r\n  createNewMessagetext: ''\r\n}\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n  switch(action.type) {\r\ncase CREATE_NEW_MESSAGE_TEXT: {\r\n  let stateCopy = {...state};\r\n  stateCopy.createNewMessagetext = action.newText;\r\n  return stateCopy;\r\n}\r\n  case MESSAGE_ADD: {\r\n    // let body = stateCopy.createNewMessagetext  ;\r\n    let stateCopy = {...state,createNewMessagetext:'',\r\n      messagesData:[...state.messagesData, {id: 6, message: state.createNewMessagetext}]};\r\n    stateCopy.messagesData = [...state.messagesData];\r\n    \r\n    \r\n    stateCopy.messagesData.push({id: 6, message: state.createNewMessagetext});\r\n    stateCopy.createNewMessagetext = 'saasas';\r\n    return stateCopy;\r\n  }\r\n    default: \r\n    return state;\r\n}\r\n  \r\n\r\n    // if (action.type === 'CREATE-NEW-MESSAGE-TEXT') {\r\n    //     state.createNewMessagetext = action.newText;\r\n    // } else if (action.type === 'MESSAGE-ADD') {\r\n    //     let body = state.createNewMessagetext;\r\n    //     state.createNewMessagetext = \" \";\r\n    //     state.messagesData.push({ id: 6, message: body });\r\n    // }\r\n    // return state;\r\n}\r\n\r\nexport default dialogsReducer;\r\n\r\n\r\nexport const updateNewMessagTextActionCreator = (text) => {\r\n    return {\r\n      type:'CREATE-NEW-MESSAGE-TEXT',\r\n      newText: text\r\n    }\r\n  }\r\n\r\nexport const addMessageActionCreator = () => {\r\n    return {\r\n      type:'MESSAGE-ADD'\r\n    }\r\n  }","import React from 'react'\r\nimport s from './Dialog.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = '/message/' + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className='s.dialog'>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../HOC/withAuthRedirect';\r\nimport { addMessageActionCreator, updateNewMessagTextActionCreator } from '../../redux/dialog_reducer'\r\nimport Dialog from './Dialog';\r\n\r\n\r\n// const DialogContainer = (props) => {\r\n//     debugger    \r\n//     let state = props.state.getState();\r\n\r\n//     let addMessage = () => {\r\n//         props.dispatch(addMessageActionCreator())\r\n//     }\r\n\r\n//     let MessageText = (event) => {\r\n\r\n        \r\n//         props.dispatch(updateNewMessagTextActionCreator(event));\r\n//     }\r\n//     return (\r\n//         <Dialog MessageText={MessageText} addMessage={addMessage}\r\n//          dialogsData={state.dialogPage.dialogsData}\r\n//          messagesData={state.dialogPage.messagesData}/>\r\n//     )\r\n\r\n// };\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsData: state.dialogPage\r\n        \r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: () => {dispatch(addMessageActionCreator())},\r\n        MessageText: (event) => {dispatch(updateNewMessagTextActionCreator(event))}\r\n    }\r\n}\r\n\r\nlet authRedirect = withAuthRedirect(Dialog)\r\n\r\n\r\n\r\nconst DialogContainer = connect(mapStateToProps, mapDispatchToProps)(authRedirect);\r\n\r\nexport default DialogContainer;","import React from 'react';\r\nimport s from './Dialog.module.css';\r\nimport DialogItem from './DialogItem';\r\nimport Message from './Message';\r\n\r\nconst Dialog = (props) => {\r\n\r\n    let dialogsElements = props.dialogsData.dialogsData.map(dialog => <DialogItem name={dialog.name} id={dialog.id} />);\r\n\r\n    // Create a dialog based on array of data\r\n    let messagesElements = props.dialogsData.messagesData.map(m => <Message message={m.message} />);\r\n\r\n    let addMessage = () => {\r\n        props.addMessage();\r\n    }\r\n\r\n    let onMessageText = (event) => {\r\n        let text = event.target.value;\r\n        props.MessageText(text);\r\n\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <div> <textarea onChange={onMessageText}\r\n                    value={props.createNewMessagetext}\r\n                    placeholder='Enter you message'></textarea></div>\r\n                <div> <button onClick={addMessage}>Send</button></div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Dialog;","export default __webpack_public_path__ + \"static/media/headIcon.fb90b7e3.png\";","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport headIcon from '../../assets/headIcon.png'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n    <header className={s.Header}>\r\n    <img className={s.headIcon} src={headIcon}></img>\r\n    <span className={s.headTitle}>simple social network</span>\r\n    <div className={s.loginBlock}>\r\n{props.isAuth ? <div>{props.login} - <button onClick={props.logout}> logout </button> </div>  \r\n: <NavLink to={'/login'} className={s.login}> login </NavLink>}\r\n    </div>\r\n  </header>)\r\n}\r\n\r\nexport default Header;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: { \"API-KEY\": 'df505b79-2df6-439f-87d2-7a2e3eb90c41' }\r\n})\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => {return response.data})\r\n    },\r\n    login(email, password, rememberMe) {\r\n        return instance.post(`auth/login`,{\r\n            email,\r\n            password,\r\n            rememberMe\r\n        })\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\nexport const usersAPI = {\r\n\r\n    getUsers(currentPage, pageSize) {\r\nreturn instance.get(`users?page=${currentPage}&count${pageSize}`).\r\nthen(response => {\r\n    return response.data;\r\n})\r\n    },\r\n    follow(id) {return instance.post(`follow/${id}`).then( response => {return response.data})},\r\n    unfollow(id) {return instance.delete(`follow/${id}`).then( response => {return response.data})}\r\n}\r\n\r\nexport const profileAPI = {\r\n\r\n    getProfile(userId) {\r\n        \r\n        return instance.get(`profile/${userId}`).\r\n        then(response => { return response.data})\r\n}, \r\ngetStatus(userId) {\r\n    return instance.get(`profile/status/${userId}`)\r\n},\r\nupdateStatus(status) {\r\nreturn instance.put(`profile/status`, {status: status})\r\n},\r\nsavePhoto(photoFile) {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", photoFile);\r\n    return instance.put(`profile/photo`, formData, {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n    })},\r\n    saveProfile(profileObject) {\r\n        \r\n        return instance.put(`profile`, profileObject)\r\n    }\r\n \r\n}\r\n    \r\n\r\n\r\n","import { authAPI } from '../api/api';\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n  id: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  password: null,\r\n  rememberMe: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case SET_USER_DATA: {\r\n      return {\r\n        ...state,\r\n        ...action.data,\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;\r\n\r\nexport const setAuthUserData = (Id, email, login, isAuth) => {\r\n  return {\r\n    type: SET_USER_DATA,\r\n    data: { Id, email, login, isAuth }\r\n  }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n  authAPI.login(email, password, rememberMe).then(response => {\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(auth())\r\n    }\r\n\r\n  })\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  authAPI.logout().then(response => {\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(setAuthUserData(null,null,null,false))\r\n    }\r\n\r\n  })\r\n}\r\n\r\nexport const auth = () => (dispatch) => {\r\n\r\n  return authAPI.getAuth().then(data => {\r\n    let { id, email, login } = data.data;\r\n    if (data.resultCode === 0) {dispatch(setAuthUserData(id, email, login, true));}\r\n    \r\n  })\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n  componentDidMount() {}\r\n\r\n  render() {return (<Header {...this.props} />)}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  \r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import { Field, Form, Formik, ErrorMessage } from 'formik';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <h2>login</h2>\r\n        <Formik\r\n       initialValues={{ email: '', password: '', rememberMe: false}}\r\n    //    validate={values => {\r\n    //      const errors = {};\r\n    //      if (!values.email) {\r\n    //        errors.email = 'Required';\r\n    //      } else if (\r\n    //        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n    //      ) {\r\n    //        errors.email = 'Invalid email address';\r\n    //      }\r\n    //      return errors;\r\n    //    }}\r\n       onSubmit={(values, { setSubmitting }) => {\r\n         \r\n         //let logObj = JSON.stringify(values, null, 2)\r\n         //alert(values.email)\r\n           props.login(values.email, values.password, values.rememberMe);\r\n           \r\n         setSubmitting(false)\r\n         \r\n       }}\r\n     >\r\n       {({ isSubmitting }) => (\r\n         <Form>\r\n             <div><Field type=\"text\" name=\"email\" placeholder='Enter you login'/>\r\n           <ErrorMessage name=\"email\" component=\"div\" /></div>\r\n           <div><Field type=\"password\" name=\"password\" />\r\n           <ErrorMessage name=\"password\" component=\"div\" /></div>\r\n           <div><Field type=\"checkbox\" name=\"rememberMe\" />Remember me</div>\r\n           <div><button type=\"submit\" disabled={isSubmitting}>\r\n             Submit\r\n           </button></div>\r\n           \r\n         </Form>\r\n       )}\r\n     </Formik>\r\n     </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default connect(null, {login})(LoginForm)","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css'\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className='nav'>\r\n      <div className={s.item}><NavLink to='/profile' activeClassName={s.activeLink}>My profile</NavLink></div>\r\n      <div className={s.item}><NavLink to='/message' activeClassName={s.activeLink}>Messages</NavLink></div>\r\n      <div className={s.item}><NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink></div>\r\n      <div className={s.item}><NavLink to='setting' activeClassName={s.activeLink}>Setting</NavLink></div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { Field, Form, Formik, ErrorMessage } from 'formik';\r\n\r\n\r\n\r\nconst ProfileDataForm = (props) => {\r\n\r\n\r\n  return <div>\r\n    <Formik\r\n\r\n\r\n      initialValues={{\r\n        userId: 0,\r\n        lookingForAJob: false,\r\n        lookingForAJobDescription: '',\r\n        fullName: '',\r\n        contacts: {\r\n          github: '',\r\n          vk: '',\r\n          facebook: '',\r\n          instagram: '',\r\n          twitter: '',\r\n          website: '',\r\n          youtube: '',\r\n          mainLink: ''\r\n        }\r\n      }}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n\r\n        //let logObj = JSON.stringify(values, null, 2)\r\n\r\n        props.offEditMode();\r\n        props.saveProfile(values);\r\n        setSubmitting(false)\r\n\r\n      }}\r\n\r\n    >\r\n\r\n      {({ values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty, offEditMode }) => (\r\n        <Form>\r\n          <div><Field type=\"text\" name=\"fullName\" placeholder='Enter you fullname' /></div>\r\n          <div><Field type=\"checkbox\" name=\"lookingForAJob\" />lookingForAJob</div>\r\n          <div><Field type=\"text\" name=\"lookingForAJobDescription\" placeholder='Descriprtionof Job' /></div>\r\n          <div>контакты\r\n            <Field type=\"text\" name=\"contacts.github\" />\r\n            <Field type=\"text\" name=\"contacts.vk\" />\r\n            <Field type=\"text\" name=\"contacts.facebook\" />\r\n            <Field type=\"text\" name=\"contacts.instagram\" />\r\n            <Field type=\"text\" name=\"contacts.twitter\" />\r\n            <Field type=\"text\" name=\"contacts.website\" />\r\n            <Field type=\"text\" name=\"contacts.youtube\" />\r\n            <Field type=\"text\" name=\"contacts.mainLink\" />\r\n          </div>\r\n\r\n\r\n          <div><button type=\"submit\" disabled={handleSubmit} onClick={() => {\r\n            props.offEditMode()\r\n          }}>\r\n            Save\r\n          </button></div>\r\n\r\n        </Form>\r\n\r\n      )}\r\n\r\n\r\n    </Formik>\r\n  </div>\r\n}\r\n//touched - показывает, взаимодействовали ли мы с полем ранее\r\n//handleChange - вызывается каждый раз, когда мы меняем значение формы\r\n//handleBlur - вызывается каждый раз, когда мы уходим с какого-то поля\r\n// isValid - валидна форма в данный момент или нет \r\n// handleSubmit - привязан к кнопке отправки формы и он будет вызывать функцию onSubmit\r\n//dirty - он говорит нам, изменялись ли когда-либо значения в форме\r\n\r\nexport default ProfileDataForm","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n let [editMode, setEditMode] = useState(false);\r\n let [status, setStatus] = useState(props.status);\r\n \r\nuseEffect(()=> {\r\nsetStatus(props.status )\r\n}, [props.status]) //закиньте в меня функцию, которую я выполню , когда произойдет уже отриcовка\r\n// Use effect запускать не всегда, а только в момент когда самый первый раз компонента вмонтировалась\r\n\r\nconst activateEditMode = () => {setEditMode(true);}\r\n\r\nconst deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status)\r\n}\r\n\r\nconst onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n}\r\n\r\n    return (\r\n        <div >\r\n            {!editMode &&\r\n                <div>\r\n                    \r\n                    <span onDoubleClick={activateEditMode}>{props.status || 'Enter new status'}</span>\r\n                    </div>\r\n            }\r\n\r\n            {editMode &&\r\n                <div><input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/> </div>\r\n            }\r\n\r\n        </div>\r\n        \r\n        )\r\n        \r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport './button.css';\r\n\r\n\r\nconst Button = ({name,onClick}) => {\r\n\r\nreturn (\r\n    <button onClick={()=>onClick()} className=\"button\" > \r\n{name}\r\n    </button>\r\n)\r\n\r\n}\r\n\r\nexport default Button;","import React, { useState } from \"react\";\r\nimport s from './Profile.module.css';\r\nimport { Contact } from \"./Avatarinfo/AvatarInfo\";\r\nimport Button from \"../Common/Button\";\r\n\r\n\r\nconst ProfileDataBlock = (props) => {\r\n    let [displayContact, showContact] = useState(false);\r\n\r\n    return <div className={s.item}>\r\n\r\n\r\n        <div>job: {props.profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n        <Button onClick={()=>showContact(true)} name={'contact'}/>\r\n\r\n        <div>\r\n\r\n            { \r\n            \r\n            displayContact &&\r\n           \r\n            Object.keys(props.profile.contacts)\r\n            .map(key => {\r\n                return <Contact key={key} contactTitle={key} \r\n                contactValue={props.profile.contacts[key]} />\r\n            })\r\n       \r\n       }\r\n       {  displayContact &&   <button onClick={()=>showContact(false)}></button> }\r\n\r\n\r\n            {props.isOwner ? <div><button onClick={props.goToEditMode}>Изменить информацию</button></div>: <div></div>}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default ProfileDataBlock;","export default __webpack_public_path__ + \"static/media/user_avatar.329f5d2d.png\";","import React, { useState } from 'react';\r\nimport s from './Ava.module.css';\r\nimport Preloader from '../../Common/Preloader';\r\nimport ProfileDataForm from '../ProfileDataForm';\r\nimport ProfileStatusWithHooks from '../ProfileStatusWithHooks';\r\nimport ProfileDataBlock from '../ProfileDataBlock';\r\nimport userPhoto from '../../../assets/user_avatar.png';\r\nconst AvatarInfo = (props) => {\r\n \r\n //debugger\r\n let [editMode, setEditMode] = useState(false);\r\n \r\n\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelected = e => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0])\r\n    }\r\n  }\r\nconst onloadInfromationAboutProfile = (objectInformation) => {\r\n  props.saveProfile(objectInformation);\r\n    \r\n}\r\n\r\n  return (\r\n    <div className={s.description}>\r\n\r\n      <div className={s.avatar}>\r\n        <img src={props.profile.photos.large || userPhoto}></img>\r\n        {props.isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} placeholder={\"Enter you photo\"} />}\r\n      </div>\r\n      <div className={s.information}>\r\n      <div>\r\n        {props.profile.fullName}\r\n      \r\n      <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n      \r\n      <div className={s.link}>\r\n      {editMode? <ProfileDataForm offEditMode={()=>{setEditMode(false)}} saveProfile={((objectinformation)=> {onloadInfromationAboutProfile(objectinformation)})}/> :\r\n      \r\n      <ProfileDataBlock profile={props.profile} isOwner={props.isOwner} \r\n      goToEditMode={()=> {setEditMode(true)}} />}\r\n    </div>\r\n</div>\r\n</div>\r\n    </div>)}\r\n\r\n\r\nexport const Contact = ({contactTitle},{contactValue}) => {\r\n  return (\r\n  <div>\r\n    <b>{contactTitle} : </b> {contactValue}\r\n  </div>)\r\n} \r\n\r\nexport default AvatarInfo;","import {profileAPI} from '../api/api'\r\nlet ADD_POST = 'ADD-POST';\r\nlet CREATE_NEW_POST_TEXT = 'CREATE-NEW-POST-TEXT';\r\nlet SET_USERS_PROFILE = 'SET_USERS_PROFILE';\r\nlet SET_STATUS = 'SET_STATUS';\r\nlet SAVE_PHOTO_SUCCES='SAVE_PHOTO_SUCCES';\r\n\r\nlet initialState = {\r\n  posts: [\r\n    { id: 1, message: \"Hello, it's test post/\", likesCount: 100 },\r\n    { id: 2, message: 'yo', likesCount: 5 },\r\n  ],\r\n  newPostText: 'Enter post',\r\n  profile: null,\r\n  status:'Helloo'\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  \r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let newPost = {\r\n        id: 5,\r\n        message: state.newPostText,\r\n        likesCount: 0\r\n      };\r\n      let stateCopy = {...state};\r\n      stateCopy.posts = [...state.posts];\r\n      stateCopy.posts.push(newPost);\r\n      stateCopy.newPostText = '';\r\n      return stateCopy;\r\n    }\r\n\r\n    case CREATE_NEW_POST_TEXT: {\r\n      let stateCopy = {...state};\r\n      stateCopy.newPostText = action.newText;\r\n      return stateCopy;\r\n    }\r\n\r\n    case SET_USERS_PROFILE: {\r\nreturn {...state, profile: action.profile}\r\n    }\r\n    case SET_STATUS: {\r\n      return {...state, status: action.status}\r\n    }\r\n    case SAVE_PHOTO_SUCCES: {\r\n      return {...state, profile: {...state.profile, photos: action.photos}}\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default profileReducer;\r\n\r\nexport const addPostActionCreator = () => {\r\n  return {\r\n    type: 'ADD-POST'\r\n  }\r\n}\r\n\r\nexport const updateNewPostTextActionCreator = (text) => {\r\n  return {\r\n    type: 'CREATE-NEW-POST-TEXT',\r\n    newText: text\r\n  }\r\n}\r\n\r\n export const setUsersProfile = (profile) => {\r\n  return {\r\n    type: SET_USERS_PROFILE,\r\n    profile\r\n  }\r\n}\r\n\r\nexport const setStatus = (status) => {\r\n  return {\r\n    type: SET_STATUS,\r\n    status\r\n  }\r\n}\r\n\r\nexport const savePhotoSucces = (photos) => {\r\n  return {\r\n    type: SAVE_PHOTO_SUCCES,\r\n    photos\r\n  }\r\n}\r\n\r\nexport const getStatus = (userId) => (dispatch) =>{\r\n  profileAPI.getStatus(userId).then(response => {\r\n    dispatch(setStatus(response.data))\r\n  })\r\n}\r\n\r\nexport const updateStatus = (status) => (dispatch) =>{\r\n  profileAPI.updateStatus(status).then(response => {\r\n    if (response.data.resultCode === 0) {\r\n    dispatch(setStatus(status))\r\n    }\r\n  })\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) =>{\r\n   let response = await profileAPI.savePhoto(file);\r\n   if (response.data.resultCode === 0) {\r\n    dispatch(savePhotoSucces(response.data.data.photos))\r\n    }\r\n}\r\n\r\n\r\nexport const getUsersProfile = (userId) => (dispatch) => {\r\n  profileAPI.getProfile(userId).then(data => {\r\n    \r\n    dispatch(setUsersProfile(data));\r\n  })\r\n}\r\n\r\nexport const saveProfile = (profileObject) => async (dispatch) => {\r\n  \r\n  let response = await profileAPI.saveProfile(profileObject);\r\n  if (response.resultCode === 0) {\r\n  // dispatch(savePhotoSucces(response.data.data.photos))\r\n   }\r\n}\r\n\r\n// saveProfile\r\n\r\n//old\r\n  // if (action.type === 'ADD-POST') {\r\n    //     let newPost = {\r\n    //         id: 5,\r\n    //         message: state.newPostText,\r\n    //         likesCount: 0\r\n    //     };\r\n    //     state.posts.push(newPost);\r\n    //     state.newPostText = '';\r\n    // } else if (action.type === CREATE_NEW_POST_TEXT) {\r\n    //     state.newPostText = action.newText;\r\n\r\n    // }\r\n    // return state;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <div>{props.message}</div>\r\n      <div>{props.likesCount} Likes</div>\r\n    </div>)\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport Button from '../../Common/Button';\r\nimport s from './MyPost.module.css';\r\nimport Post from './Post/Post'\r\n\r\n\r\n\r\nconst MyPost = (props) => {\r\n\r\nlet postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} />);\r\n\r\n\r\nlet newPostElement = React.createRef();\r\n\r\nlet postAdd = () => {\r\n  props.addPost();\r\n}\r\n\r\nlet onPostChange = () => {\r\n  let text = newPostElement.current.value;\r\n  props.updateNewPostText(text);\r\n}\r\n\r\n  return (\r\n    <div className={s.content}>\r\n      \r\n      <div> <input onChange={onPostChange} className={s.item} ref={newPostElement} value={props.newPostText}/></div>\r\n      <div> <Button onClick={postAdd} name={'Create post'}/></div>\r\n      <div>{postsElements}</div>\r\n    </div>)\r\n}\r\n\r\nexport default MyPost;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile_reducer';\r\nimport MyPost from './MyPost';\r\n\r\n\r\n// const MyPostContainer = (props) => {\r\n// let state = props.store.getState();\r\n  \r\n\r\n// let postAdd = () => {\r\n//   props.store.dispatch(addPostActionCreator());\r\n//   const action = updateNewPostTextActionCreator('');\r\n//   props.store.dispatch(action);\r\n// }\r\n\r\n// let onPostChange = (text) => {\r\n//   const action = updateNewPostTextActionCreator(text);\r\n//   props.store.dispatch(action);\r\n// }\r\n\r\n//   return (\r\n//     <MyPost updateNewPostText={onPostChange}\r\n//      addPost={postAdd} \r\n//      posts={state.profilePage.posts}\r\n//      newPostText={state.profilePage.newPostText}/>\r\n//   )\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\nposts: state.profilePage.posts,\r\nnewPostText: state.profilePage.newPostText\r\n}\r\n}\r\n\r\nlet mapDispatchToProps =(dispatch) => {\r\n  return {\r\n    updateNewPostText: (text) => {dispatch(updateNewPostTextActionCreator(text))},\r\n    addPost: () => {\r\n      dispatch(addPostActionCreator());\r\n      dispatch(updateNewPostTextActionCreator(''));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost);\r\n\r\nexport default MyPostContainer;","import React from 'react';\r\n\r\nimport AvatarInfo from './Avatarinfo/AvatarInfo';\r\nimport MyPostContainer from './MyPost/MyPostContainer';\r\n\r\nimport s from './Profile.module.css'\r\n\r\n\r\nconst Profile = (props) => {\r\n \r\n  return (\r\n    <div>\r\n      <AvatarInfo profile={props.profile} status={props.status} \r\n      updateStatus={props.updateStatus} isOwner={props.isOwner}\r\n      savePhoto={props.savePhoto} saveProfile={props.saveProfile}/>\r\n      <MyPostContainer/>\r\n    </div>)\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {getUsersProfile, getStatus, updateStatus, savePhoto, saveProfile} from '../../redux/profile_reducer'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\nrefreshProfile() {\r\n  let userId = this.props.match.params.UserId;\r\n  if (!userId) {\r\n    userId = 18048;\r\n  }\r\n   this.props.getUsersProfile(userId);\r\n   this.props.getStatus(userId);\r\n}\r\n\r\ncomponentDidMount() {\r\n this.refreshProfile();\r\n}\r\ncomponentDidUpdate(prevProps, prevState) {\r\n if (this.props.match.params.UserId != prevProps.match.params.UserId) {\r\n  this.refreshProfile();\r\n }\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n        updateStatus={this.props.updateStatus} isOwner={!this.props.match.params.UserId}\r\n        savePhoto={this.props.savePhoto} saveProfile={this.props.saveProfile}/>\r\n      </div>)\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\nprofile: state.profilePage.profile,\r\nstatus: state.profilePage.status\r\n})\r\n\r\nlet ContainerRouteProfile = withRouter(ProfileContainer);\r\n\r\nexport default connect(mapStateToProps, {getUsersProfile, getStatus, updateStatus, savePhoto, saveProfile})(ContainerRouteProfile);","import React from 'react';\r\nimport s from './Setting.module.css';\r\n\r\nconst Setting = (props) => {\r\n    return (\r\n        <div>\r\nset\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Setting;","import { usersAPI } from '../api/api';\r\nlet FOLLOW = 'FOLLOW';\r\nlet UNFOLLOW = 'UNFOLLOW';\r\nlet SET_USERS = 'SET_USERS';\r\nlet SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nlet SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\r\nlet IS_FETCHING = 'IS_FETCHING';\r\nlet TOGGLE_FOLLOW_PROGRESS = 'TOGGLE_FOLLOW_PROGRESS';\r\n\r\nlet initialState = {\r\n  users: \r\n    [],\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    totalCount: 0,    //how user get at server\r\n    isFetching: false,\r\n    followingInProgress: [2]\r\n}\r\n \r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        // users: [...state.users],\r\n        users: state.users.map(u => {\r\n          if (u.id === action.userID) {\r\n            return { ...u, followed: true }\r\n          }\r\n          return u\r\n        })\r\n      }\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.userID) {\r\n            return { ...u, followed: false }\r\n          }\r\n          return u\r\n        })\r\n      }\r\n    case SET_USERS:\r\n      return { ...state, users: action.users }\r\n      case SET_CURRENT_PAGE:\r\n        return {\r\n          ...state, currentPage: action.currentPage\r\n        }\r\n        case SET_TOTAL_COUNT:\r\n          return {\r\n            ...state, totalCount: action.totalCount\r\n          }\r\n          case IS_FETCHING:\r\n            return {...state, isFetching:action.isFetching};\r\n          case TOGGLE_FOLLOW_PROGRESS: \r\n          return {...state, \r\n            followingInProgress: action.isFetching ? \r\n            [...state.followingInProgress, action.userID]\r\n            : [state.followingInProgress.filter(id => id != action.userID)]}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default usersReducer;\r\n\r\nexport const followSucces = (userID) => {\r\n  return {\r\n    type: FOLLOW,\r\n    userID: userID\r\n  }\r\n}\r\nexport const unfollowSucces = (userID) => {\r\n  return {\r\n    type: UNFOLLOW,\r\n    userID: userID\r\n  }\r\n}\r\nexport const setUsers = (user) => {\r\n  return {\r\n    type: SET_USERS,\r\n    users: user\r\n  }\r\n  \r\n}\r\nexport const setCurrentPage = (currentPage) => {\r\n  return {\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage: currentPage\r\n  }\r\n}\r\nexport const setTotalCount = (totalCount) => {\r\n  return {\r\n    type: SET_TOTAL_COUNT,\r\n    totalCount\r\n  }\r\n}\r\nexport const setIsFetching = (isFetching) => {\r\n  return {\r\n    type: IS_FETCHING,\r\n    isFetching\r\n  }\r\n}\r\nexport const toggleFollowingInProgress = (followingInProgress, userID) => {\r\n  return {\r\n    type: TOGGLE_FOLLOW_PROGRESS,\r\n    followingInProgress,\r\n    userID\r\n  }\r\n}\r\n\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\r\n  return (dispatch) => {\r\n  \r\n  dispatch(setIsFetching(true));\r\n\r\n            usersAPI.getUsers(currentPage, pageSize).\r\n                then(data => {\r\n\r\n                    dispatch(setIsFetching(false));\r\n\r\n                    dispatch(setUsers(data.items));\r\n                    dispatch(setTotalCount(data.totalCount))\r\n                })\r\n}\r\n}\r\n\r\nexport const follow = (id) => {\r\n  return (dispatch) => {\r\n  \r\n    dispatch(toggleFollowingInProgress(true, id));\r\n    usersAPI.follow(id).then(response => {\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(followSucces(id));\r\n        }\r\n    })\r\n    dispatch(toggleFollowingInProgress(false, id));\r\n}\r\n}\r\n\r\nexport const unfollow = (id) => {\r\n  return (dispatch) => {\r\n  \r\n    dispatch(toggleFollowingInProgress(true, id));\r\n    usersAPI.unfollow(id).then(response => {\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(unfollowSucces(id));\r\n        }\r\n    })\r\n    dispatch(toggleFollowingInProgress(false, id));\r\n}\r\n}","import React, { useState } from 'react';\r\nimport s from './Paginator.module.css';\r\n\r\nlet Paginator = (props) => {\r\n\r\n    let pageCount = Math.ceil(props.totalCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pageCount; i++) { pages.push(i); }\r\n\r\n    let [PortionNumber, setPortionNumber] = useState(1)\r\n    let PortionSize = 20;\r\n    let PortionCount = Math.ceil(pageCount / PortionSize);\r\n\r\n    let leftBorderPortion = (PortionNumber - 1) * PortionSize + 1;\r\n    let RightBorderportion = PortionNumber * PortionSize;\r\n\r\n    return <div className={s.Paginator}>\r\n        {PortionNumber > 1 && <button onClick={() => { setPortionNumber(PortionNumber - 1) }}>PREV</button>}\r\n        <div>\r\n            {pages.filter(p =>   p<=RightBorderportion && p>=leftBorderPortion)\r\n                .map((p) => {\r\n                    return <span className={props.currentPage === p && s.activePage}\r\n                        onClick={(event) => { props.onPageChanged(p); }}>{p} </span>\r\n                })}\r\n\r\n        </div>\r\n\r\n        {PortionCount > PortionNumber && <button onClick={() => { setPortionNumber(PortionNumber + 1) }}>NEXT</button>}\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport user_avatar from '../../assets/user_avatar.png';\r\nimport s from './Users.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Paginator from './Paginator';\r\nimport Button from '../Common/Button';\r\n\r\n\r\nlet Users = (props) => {\r\n\r\n\r\n    return <div>\r\n<div className={s.h2}>\r\nUsers\r\n</div>   \r\n\r\n<div className={s.users}>\r\n        {\r\n            \r\n            props.users.map(u =>\r\n                \r\n                <div key={u.id}>\r\n                    \r\n                    <span className={s.item}>\r\n                        \r\n                        <div>\r\n                            {u.name} <b>{u.status}</b>\r\n                        </div>\r\n                        {<div>\r\n                            <NavLink to={'/profile/' + u.id}>\r\n                                <img src={u.photos.small != null ? u.photos.small : user_avatar} className={s.avatar} />\r\n                            </NavLink   >\r\n                        </div>}\r\n                        <div>\r\n                            {u.followed ? <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                onClick={() => {\r\n                                    props.unfollow(u.id)\r\n                                }\r\n                                }\r\n                                name={'unfollow'}\r\n                            >unfollow</button>\r\n\r\n                                : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                    onClick={() => {\r\n\r\n                                        props.follow(u.id)\r\n                                    }}>follow</button>}\r\n\r\n                        </div>\r\n                    </span>\r\n\r\n                    {/* <span>\r\n                            <div>{u.location.country}</div>\r\n                            <div>{u.location.city}</div>\r\n                        </span>  */}\r\n\r\n\r\n                </div>\r\n\r\n            )\r\n\r\n        }\r\n        </div>\r\n\r\n        <Paginator totalCount={props.totalCount} pageSize={props.pageSize}\r\n            onPageChanged={props.onPageChanged} currentPage={props.currentPage} />\r\n\r\n    </div>\r\n}\r\n\r\nexport default Users;","import { createSelector } from \"reselect\"\r\n\r\nexport const getUsers =(state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsersSuper = createSelector(getUsers , (users)=> {\r\n    return users.filter(u => true)\r\n});\r\n\r\n\r\nexport const getPageSize =(state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getCurrentPage =(state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getTotalCount =(state) => {\r\n    return state.usersPage.totalCount\r\n}\r\n\r\nexport const getStatusIsFetching =(state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getStatusFollInProgress =(state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, getUsersThunkCreator, toggleFollowingInProgress,\r\n     setCurrentPage, setTotalCount, unfollow } from '../../redux/users_reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../Common/Preloader';\r\nimport { getCurrentPage, getPageSize, getStatusFollInProgress, getStatusIsFetching, getTotalCount, getUsersSuper } from '../../redux/Users-selectors';\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n    \r\n    componentDidMount() {\r\n        \r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n        /*/ this.props.setIsFetching(true);\r\n        //     usersAPI.getUsers(this.props.currentPage, this.props.pageSize).\r\n        //         then(data => {\r\n        //             this.props.setIsFetching(false);\r\n        //             this.props.setUsers(data.items);\r\n        //             this.props.setTotalCount(data.totalCount)\r\n        //         })*/\r\n            }\r\n    \r\n    \r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n        this.props.setCurrentPage(pageNumber);\r\n        // this.props.setIsFetching(true);\r\n        \r\n        // usersAPI.getUsers(pageNumber, this.props.pageSize).\r\n        //         then(data => {\r\n        //             this.props.setIsFetching(false);\r\n        //             this.props.setUsers(data.items);\r\n        //         })\r\n    \r\n    }\r\n    \r\n        render() {\r\n    \r\n            return <>\r\n            {this.props.isFetching ? <Preloader/>: null}\r\n            <Users totalCount={this.props.totalCount} pageSize={this.props.pageSize} \r\n            currentPage={this.props.currentPage} unfollow={this.props.unfollow} follow={this.props.follow} \r\n            onPageChanged={this.onPageChanged} users={this.props.users} \r\n            followingInProgress={this.props.followingInProgress}\r\n             />\r\n            </>\r\n        }\r\n    }\r\n\r\n\r\n// let mapStatetoProps = (state) => {\r\n    \r\n// return {\r\n//     users: state.usersPage.users,\r\n//     pageSize: state.usersPage.pageSize,\r\n//     currentPage: state.usersPage.currentPage,\r\n//     totalCount: state.usersPage.totalCount,\r\n//     isFetching: state.usersPage.isFetching,\r\n//     followingInProgress: state.usersPage.followingInProgress\r\n// }\r\n// }\r\n\r\nlet mapStatetoProps = (state) => {\r\n    \r\n    return {\r\n        users: getUsersSuper(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        totalCount: getTotalCount(state),\r\n        isFetching: getStatusIsFetching(state),\r\n        followingInProgress: getStatusFollInProgress(state)\r\n    }\r\n    }\r\n\r\n\r\nconst UsersContainer =  connect(mapStatetoProps, {follow, unfollow, setCurrentPage, \r\n    setTotalCount, getUsers: getUsersThunkCreator, toggleFollowingInProgress\r\n})(UsersAPIComponent);\r\nexport default UsersContainer;\r\n\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userID) => {\r\n//             dispatch(followAC(userID))\r\n//         },\r\n//         unfollow: (userID) => {\r\n//             dispatch(unfollowAC(userID))\r\n//         },\r\n//         setUsers: (user) => {\r\n//             dispatch(setUsersAC(user))\r\n//         },\r\n//         setCurrentPage: (currentPage) => {\r\n//             dispatch(setCurrentPageAC(currentPage))\r\n//         },\r\n//         setTotalCount: (totalCount) => {\r\n//             dispatch(setTotalCountAC(totalCount))\r\n//         },\r\n//         setIsFetching: (isFetching) => {\r\n//             dispatch(setIsFetchingAC(isFetching))\r\n//         },\r\n//     }\r\n// }","import { authAPI } from '../api/api';\r\nimport { auth } from './auth-reducer';\r\nconst SET_INITIALIZED = 'SET_INITIALIZED';\r\n\r\nlet initialState = {\r\n  initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case SET_INITIALIZED: {\r\n      \r\n      return {\r\n        ...state,\r\n        initialized:true\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const inicializedSucces = () => {\r\n  return {type: SET_INITIALIZED}\r\n}\r\n\r\n\r\nexport const initialApp = () => (dispatch) => {\r\nlet promise = dispatch(auth());\r\npromise.then(() => {dispatch(inicializedSucces())}) \r\n}\r\n\r\nexport default appReducer;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport Preloader from './components/Common/Preloader';\nimport DialogContainer from './components/Dialogs/DialogContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\n\nimport Navbar from './components/Navbar/Navbar';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport Setting from './components/Setting/Setting';\nimport UsersContainer from './components/Users/Users_container';\nimport {initialApp} from './redux/app-reducer'\n\n\n\nclass App extends React.Component {\n\ncomponentDidMount() {\n  this.props.initialApp()\n}\n\n  render() {\n    if (!this.props.initialized) {return <Preloader/>}\n  return (\n    <BrowserRouter>\n      <div className='app_wrapper'>\n        <div className='Header'><HeaderContainer /></div>\n        <div className='nav'><Navbar /></div>\n        <div className='app_wrapper_content'>\n          <Route path='/profile/:UserId?' render={() => <ProfileContainer />} />\n          <Route path='/message' render={() => <DialogContainer />} />\n          <Route path='/users' render={ ()=> <UsersContainer/>} />\n   \n          <Route path='/setting' component={Setting} />\n          <Route path='/login' render={ ()=> <Login/>} />\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n\n}\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nexport default connect(mapStateToProps, {initialApp})(App);\n","import dialogsReducer from \"./dialog_reducer\";\r\nimport profileReducer from \"./profile_reducer\";\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport usersReducer from \"./users_reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleWare from \"redux-thunk\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage : profileReducer,\r\n    dialogPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n});\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleWare));\r\n\r\nexport default store;","import reportWebVitals from './reportWebVitals';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\nreportWebVitals();\n"],"sourceRoot":""}